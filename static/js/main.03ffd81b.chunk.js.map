{"version":3,"sources":["core/utils.ts","components/SVG.tsx","components/RadioCard.tsx","components/RadioList.tsx","components/player/PlayerSongControls.tsx","components/player/PlayerSongDetails.tsx","components/player/PlayerSongExtraControls.tsx","components/player/Player.tsx","App.tsx","core/http-client.ts","core/stores/PlayerState.ts","core/stores/rootStore.ts","index.tsx"],"names":["injectAndObserve","component","inject","observer","getCurrentSong","radio","playlist","find","item","song","id","end_timestamp","Date","now","SVG","height","width","viewBox","fill","map","index","rx","ry","x","y","d","PreviousButton","onClick","PlayPauseButton","color","paused","setPaused","cx","cy","r","stroke","strokeWidth","NextButton","DarkModeButton","darkMode","setDarkMode","fillRule","clipRule","VolumeButton","volume","HdQualityButton","hdQuality","setHdQuality","RadioCard","store","playerState","selectedRadio","setRadio","length","grayColor","className","style","backgroundImage","title","name","src","img_url","alt","artist","onError","event","currentTarget","logo","classNames","CardPlayButton","Bars","RadioList","radios","PlayerSongControls","setAudioRef","currentSongIndex","findIndex","url_hd_aac","url_128k_mp3","ref","PlayerSongDetails","PlayerSongExtraControls","audioRef","setVolume","useState","volumeSlider","setVolumeSlider","hidden","type","min","max","value","onChange","target","valueAsNumber","current","Player","currentRadio","setCurrentRadio","React","useRef","togglePlayer","_paused","a","audio","load","play","pause","useEffect","App","dark","url","method","options","axios","request","data","http","get","path","PlayerState","rootStore","observable","action","localStorage","setItem","refreshSong","refreshAndGetRadio","RootStore","getInitialDarkMode","status","getItem","window","matchMedia","matches","this","refresh","then","lastRadioId","catch","undefined","setInterval","render","document","getElementById"],"mappings":"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","file":"static/js/main.03ffd81b.chunk.js","sourcesContent":["import { Radio, RadioSong } from './types';\nimport { inject, observer } from 'mobx-react';\nimport { IReactComponent } from 'mobx-react/dist/types/IReactComponent';\n\nexport function injectAndObserve<T extends IReactComponent>(component: T): T {\n  return inject('store')(observer(component));\n}\n\nexport function getCurrentSong(radio?: Radio): RadioSong | undefined {\n  return radio?.playlist?.find((item) => !item.song.id || item.end_timestamp * 1000 > Date.now())\n    ?.song;\n}\n","import React from 'react';\n\nexport default class SVG {\n  static Bars() {\n    return (\n      <svg height=\"50\" width=\"35\" viewBox=\"0 0 100 100\" fill=\"#fff\">\n        {[45, 80, 60].map((height, index) => (\n          <rect\n            key={`${height}`}\n            height={height}\n            width={30}\n            rx=\"5\"\n            ry=\"5\"\n            x={index * 35}\n            y={100 - height}\n            fill=\"currentColor\"\n          />\n        ))}\n      </svg>\n    );\n  }\n\n  static CardPlayButton() {\n    return (\n      <svg width=\"50\" height=\"50\" viewBox=\"0 0 32 32\">\n        <path\n          fill=\"currentColor\"\n          d=\"M7.3,2C6.9,2,6.4,2.1,6.1,2.4C4.9,2.9,4.8,3.9,4.8,4.2v23.5c0,1,0.7,1.6,1.2,1.9C6.3,29.9,6.7,30,7.2,30c0.1,0,0.2,0,0.3,0 c0,0,0,0,0.1,0l0,0c0.4,0,0.7-0.1,1.1-0.2c0.1,0,0.3-0.1,0.4-0.2l21.7-11.8c0.3-0.1,0.8-0.5,1.1-1.2c0.2-0.6,0.2-1.1-0.1-1.6 c-0.1-0.2-0.2-0.4-0.4-0.5l-0.2-0.2c-0.1-0.1-0.3-0.2-0.4-0.3L8.7,2.4C8.3,2.1,7.7,2,7.3,2L7.3,2z\"\n        />\n      </svg>\n    );\n  }\n\n  static PreviousButton: React.FC<{ onClick: () => void }> = ({ onClick }) => (\n    <svg width=\"24\" height=\"25\" viewBox=\"0 0 17 18\" onClick={onClick}>\n      <path d=\"M0 0h2v18H0V0zM4 9l13-9v18L4 9z\" fill=\"currentColor\" />\n    </svg>\n  );\n\n  static PlayPauseButton: React.FC<{\n    color?: string;\n    paused: boolean;\n    setPaused: (value: boolean) => void;\n  }> = ({ color, paused, setPaused }) => (\n    <svg height=\"75\" width=\"75\" viewBox=\"0 0 50 50\" fill=\"none\" onClick={() => setPaused(!paused)}>\n      <circle\n        cx=\"25\"\n        cy=\"25\"\n        r=\"24\"\n        stroke={color ? `#${color}` : 'currentColor'}\n        strokeWidth=\"1.5\"\n      />\n      <path fill={paused ? 'none' : 'currentColor'} d=\"M18 16h4v18h-4V16zM28 16h4v18h-4z\" />\n      <path\n        fill={!paused ? 'none' : 'currentColor'}\n        d=\"m35.83775,24.35328l0,0l-15.54984,-8.98869l0,0.00975c-0.10724,-0.05849 -0.21448,-0.10724 -0.35097,-0.10724c-0.38996,0 -0.70194,0.31197 -0.70194,0.70194l0.0195,0.07799l-0.0195,0l0,17.95787l0.0195,0c0.039,0.35097 0.33147,0.62394 0.69219,0.62394c0.12674,0 0.24373,-0.039 0.35097,-0.10724l0.00975,0.0195l15.54984,-8.97894l-0.00975,-0.0195c0.21448,-0.11699 0.36072,-0.34122 0.36072,-0.60445s-0.15599,-0.45821 -0.37047,-0.58495z\"\n      />\n    </svg>\n  );\n\n  static NextButton: React.FC<{ onClick: () => void }> = ({ onClick }) => (\n    <svg width=\"24\" height=\"25\" viewBox=\"0 0 17 18\" fill=\"none\" onClick={onClick}>\n      <path d=\"M17 0H15V18H17V0Z\" fill=\"currentColor\" />\n      <path d=\"M13 9L0 0V18L13 9Z\" fill=\"currentColor\" />\n    </svg>\n  );\n\n  static DarkModeButton: React.FC<{ darkMode: boolean; setDarkMode: (value: boolean) => void }> = ({\n    darkMode,\n    setDarkMode,\n  }) => (\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 20 20\" onClick={() => setDarkMode(!darkMode)}>\n      <path\n        fill={darkMode ? 'none' : 'currentColor'}\n        d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\"\n      />\n      <path\n        fill={!darkMode ? 'none' : 'currentColor'}\n        d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n\n  static VolumeButton: React.FC<{\n    volume: number;\n    onClick: () => void;\n  }> = ({ volume, onClick }) => (\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 32 32\" onClick={onClick}>\n      <path\n        fill={volume ? 'none' : 'currentColor'}\n        d=\"M18.4,1.1c-0.6-0.3-1.3-0.2-1.8,0.3L8,9C7.8,9.2,7.5,9.3,7.3,9.3H4.4C2.5,9.3,1,10.8,1,12.6v6.8c0,1.8,1.5,3.3,3.4,3.3h2.8 c0.3,0,0.5,0.1,0.7,0.3l8.6,7.6c0.3,0.3,0.7,0.4,1.1,0.4c0.2,0,0.5,0,0.7-0.1c0.6-0.3,1-0.8,1-1.5V2.6C19.4,2,19,1.4,18.4,1.1z M27.8,16l3-3c0.3-0.3,0.3-0.8,0-1.1c-0.3-0.3-0.8-0.3-1.1,0l-3,3l-3-3c-0.3-0.3-0.8-0.3-1.1,0c-0.3,0.3-0.3,0.8,0,1.1l3,3l-3,3 c-0.3,0.3-0.3,0.8,0,1.1c0.1,0.1,0.3,0.2,0.5,0.2c0.2,0,0.4-0.1,0.5-0.2l3-3l3,3c0.1,0.1,0.3,0.2,0.5,0.2c0.2,0,0.4-0.1,0.5-0.2 c0.3-0.3,0.3-0.8,0-1.1L27.8,16z\"\n      />\n      <path\n        fill={!volume ? 'none' : 'currentColor'}\n        d=\"M18.4,1.1c-0.6-0.3-1.3-0.2-1.8,0.3L8,9C7.8,9.2,7.6,9.3,7.3,9.3H4.4C2.5,9.3,1,10.8,1,12.6v6.8c0,1.8,1.5,3.3,3.4,3.3h2.9 c0.3,0,0.5,0.1,0.7,0.3l8.7,7.6c0.3,0.3,0.7,0.4,1.1,0.4c0.2,0,0.5,0,0.7-0.1c0.6-0.3,1-0.8,1-1.5V2.6C19.4,2,19,1.4,18.4,1.1z M23.2,8.9c-0.3-0.3-0.7-0.3-1.1-0.1c-0.3,0.3-0.3,0.7-0.1,1.1c3.1,3.6,3.1,9,0,12.6c-0.3,0.3-0.2,0.8,0.1,1.1 c0.1,0.1,0.3,0.2,0.5,0.2c0.2,0,0.4-0.1,0.6-0.3C26.8,19.2,26.8,13,23.2,8.9z M26.5,4.6c-0.3-0.3-0.8-0.3-1.1,0 c-0.3,0.3-0.3,0.8,0,1.1c5.4,5.9,5.4,15.1,0,21c-0.3,0.3-0.3,0.8,0,1.1c0.1,0.1,0.3,0.2,0.5,0.2c0.2,0,0.4-0.1,0.6-0.2 C32.5,21.2,32.5,11.1,26.5,4.6z\"\n      />\n    </svg>\n  );\n\n  static HdQualityButton: React.FC<{\n    hdQuality: boolean;\n    setHdQuality: (value: boolean) => void;\n  }> = ({ hdQuality, setHdQuality }) => (\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 32 32\" onClick={() => setHdQuality(!hdQuality)}>\n      <path\n        fill={!hdQuality ? 'none' : 'currentColor'}\n        d=\"M20.8,13.6H19v5.3h1.8c0.7,0,1.4-0.2,2-0.7c1-1.1,1-2.8,0-3.9C22.3,13.8,21.5,13.6,20.8,13.6z M28.1,5.4H3.9 C2,5.4,0.5,7,0.5,8.9v14.2c0,1.9,1.5,3.5,3.4,3.3h24.2c1.9,0,3.4-1.5,3.4-3.4V8.8C31.5,6.9,30,5.4,28.1,5.4z M15,20.5h-2V17H9.2v3.5 h-2V12h2v3.4H13V12h2V20.5z M25,18.5c-0.4,0.7-1,1.2-1.7,1.5s-1.6,0.5-2.4,0.5H17V12h3.9c0.8,0,1.6,0.1,2.4,0.5 c0.7,0.3,1.3,0.9,1.7,1.5C25.8,15.4,25.8,17.1,25,18.5z\"\n      />\n      <path\n        fill={hdQuality ? 'none' : 'currentColor'}\n        d=\"M28.1,5.4H3.9C2,5.4,0.5,7,0.5,8.9v14.2c0,1.9,1.5,3.4,3.4,3.4h24.2c1.9,0,3.4-1.5,3.4-3.4V8.9C31.5,7,30,5.4,28.1,5.4z M28.1,25.3H3.9c-1.2,0-2.1-1-2.1-2.1V8.9c0-1.2,1-2.1,2.1-2.1h24.2c1.2,0,2.1,1,2.1,2.1l0,14.2C30.2,24.3,29.3,25.3,28.1,25.3z M13,15.4H9.2V12h-2v8.5h2V17H13v3.5h2V12l-2,0V15.4z M23.3,12.5c-0.8-0.4-1.6-0.5-2.4-0.5H17v8.5h3.9c0.8,0,1.7-0.2,2.4-0.5 c0.7-0.3,1.3-0.8,1.7-1.5c0.8-1.4,0.8-3.1,0-4.5C24.6,13.4,24,12.9,23.3,12.5z M22.8,18.2c-0.6,0.5-1.3,0.7-2,0.7l-1.8,0v-5.3h1.8 c0.7,0,1.5,0.2,2,0.7C23.8,15.4,23.8,17.1,22.8,18.2z\"\n      />\n    </svg>\n  );\n}\n","import { RootStore } from '../core/stores/rootStore';\nimport { Radio } from '../core/types';\nimport { getCurrentSong, injectAndObserve } from '../core/utils';\nimport SVG from './SVG';\nimport classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  radio: Radio;\n  store?: RootStore;\n};\n\nconst RadioCard: React.FC<Props> = injectAndObserve(({ radio, store }) => {\n  const { darkMode, playerState } = store!;\n  const { radio: selectedRadio, paused, setPaused, setRadio } = playerState;\n  const song = getCurrentSong(radio) ?? radio.playlist[radio.playlist.length - 1].song;\n\n  const onClick = () => (radio.id === selectedRadio?.id ? setPaused(!paused) : setRadio(radio));\n\n  const grayColor = darkMode ? '111827' : 'd1d5db';\n\n  return (\n    <div\n      className=\"flex flex-col rounded-lg p-3 items-center text-center shadow-md \"\n      style={{\n        backgroundImage: `linear-gradient(to top, #${grayColor}, #${grayColor}, #${radio.color})`,\n      }}\n    >\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n      <div className=\"w-full mb-2 relative\" title={radio.name} onClick={onClick}>\n        <img\n          className=\"w-full rounded-lg bg-red-800 shadow-md\"\n          src={song.img_url}\n          alt={song.artist}\n          onError={(event): void => {\n            event.currentTarget.src =\n              'https://img.nrj.fr/Ppd0h9o-tQTDYhph80b61ZMEfrI=/https%3A%2F%2Fplayers.nrjaudio.fm%2Flive-metadata%2Fplayer%2Fimg%2F200x%2FNRJ-default_173_173.png';\n          }}\n        />\n        <img\n          className=\"w-1/4 rounded-md bg-white shadow-md absolute top-2 left-2 z-10\"\n          src={radio.logo}\n          alt={radio.name}\n        />\n        <div\n          className={classNames(\n            'flex text-white items-center justify-center w-full h-full rounded-lg absolute top-0 transition-colors duration-500 cursor-pointer',\n            {\n              'opacity-0 hover:opacity-100 hover:bg-opacity-50 hover:bg-gray-900':\n                radio.id !== selectedRadio?.id,\n              'bg-opacity-50 bg-gray-900': radio.id === selectedRadio?.id,\n            }\n          )}\n        >\n          {radio.id !== selectedRadio?.id || paused ? <SVG.CardPlayButton /> : <SVG.Bars />}\n        </div>\n      </div>\n      <div className=\"max-w-full\">\n        <div className=\"text-lg font-semibold truncate\" title={song.title}>\n          {song.title}\n        </div>\n        <div className=\"text-gray-500 font-medium truncate\" title={song.artist}>\n          {song.artist}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default RadioCard;\n","import { RootStore } from '../core/stores/rootStore';\nimport { injectAndObserve } from '../core/utils';\nimport RadioCard from './RadioCard';\nimport React from 'react';\n\ntype Props = {\n  store?: RootStore;\n};\n\nconst RadioList: React.FC<Props> = injectAndObserve(({ store }) => {\n  const { radios = [] } = store!;\n\n  return (\n    <div className=\"grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 2xl:grid-cols-8 m-4 mt-64 lg:mt-40 text-black dark:text-white relative\">\n      {radios.map((radio) => (\n        <RadioCard key={radio.id} radio={radio} />\n      ))}\n    </div>\n  );\n});\n\nexport default RadioList;\n","import { RootStore } from '../../core/stores/rootStore';\nimport { injectAndObserve } from '../../core/utils';\nimport SVG from '../SVG';\nimport React from 'react';\n\ntype Props = {\n  store?: RootStore;\n  setAudioRef?: (ref: HTMLAudioElement) => void;\n};\n\nconst PlayerSongControls: React.FC<Props> = injectAndObserve(({ store, setAudioRef }) => {\n  const { radios, playerState } = store!;\n  const { hdQuality, paused, radio, setRadio, setPaused } = playerState;\n\n  const setPreviousRadio = () => {\n    const currentSongIndex = radios.findIndex((r) => r.id === radio?.id);\n\n    return setRadio(currentSongIndex ? radios[currentSongIndex - 1] : radios[radios.length - 1]);\n  };\n\n  const setNextRadio = () => {\n    const currentSongIndex = radios.findIndex((r) => r.id === radio?.id);\n\n    return setRadio(\n      currentSongIndex < radios.length - 1 ? radios[currentSongIndex + 1] : radios[0]\n    );\n  };\n\n  return (\n    <div className=\"flex mt-5 lg:mt-0 items-center justify-center\">\n      <div className=\"cursor-pointer\">\n        <SVG.PreviousButton onClick={setPreviousRadio} />\n      </div>\n      <div title={paused ? 'Play' : 'Pause'} className=\"mx-6 cursor-pointer\">\n        <SVG.PlayPauseButton paused={paused} setPaused={setPaused} color={radio?.color} />\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        <audio\n          src={hdQuality && radio?.url_hd_aac ? radio.url_hd_aac : radio?.url_128k_mp3}\n          ref={setAudioRef}\n        />\n      </div>\n      <div className=\"cursor-pointer\">\n        <SVG.NextButton onClick={setNextRadio} />\n      </div>\n    </div>\n  );\n});\n\nexport default PlayerSongControls;\n","import { Radio, RadioSong } from '../../core/types';\nimport { observer } from 'mobx-react';\nimport React from 'react';\n\ntype Props = {\n  radio?: Radio;\n  song?: RadioSong;\n};\n\nconst PlayerSongDetails: React.FC<Props> = observer(({ radio, song }) => {\n  return (\n    <div className=\"flex items-center\">\n      <img\n        className=\"flex-none w-24 h-24 rounded-lg bg-white shadow-md\"\n        src={radio?.logo}\n        alt={radio?.name}\n      />\n      <img\n        className=\"flex-none ml-3 w-24 h-24 rounded-lg bg-white shadow-md\"\n        src={song?.img_url}\n        alt={song?.title}\n      />\n      <div className=\"min-w-0 flex-auto ml-3 font-medium\">\n        <p\n          className=\"text-red-600 dark:text-red-400 text-sm truncate\"\n          style={{ color: `#${radio?.color ?? 'red'}` }}\n          title={`Playing on ${radio?.name}`}\n        >\n          Playing on <strong className=\"uppercase\">{radio?.name}</strong>\n        </p>\n        <p className=\"text-black dark:text-white text-2xl truncate\" title={song?.title}>\n          {song?.title}\n        </p>\n        <p className=\"text-gray-500 dark:text-gray-400 text-base truncate\" title={song?.artist}>\n          {song?.artist}\n        </p>\n      </div>\n    </div>\n  );\n});\n\nexport default PlayerSongDetails;\n","import { RootStore } from '../../core/stores/rootStore';\nimport { injectAndObserve } from '../../core/utils';\nimport SVG from '../SVG';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  store?: RootStore;\n  audioRef: React.MutableRefObject<HTMLAudioElement | null | undefined>;\n};\n\nconst PlayerSongExtraControls: React.FC<Props> = injectAndObserve(({ store, audioRef }) => {\n  const { darkMode, setDarkMode, playerState } = store!;\n  const { hdQuality, volume, radio, setVolume, setHdQuality } = playerState;\n\n  const [volumeSlider, setVolumeSlider] = useState<boolean>(false);\n\n  return (\n    <div className=\"flex flex-col items-end justify-center lg:flex-row lg:items-center lg:justify-end mr-2\">\n      <div className=\"cursor-pointer hover:bg-gray-500 hover:bg-opacity-50 rounded-full p-3\">\n        <SVG.DarkModeButton darkMode={darkMode} setDarkMode={setDarkMode} />\n      </div>\n      <div className=\"relative cursor-pointer hover:bg-gray-500 hover:bg-opacity-50 rounded-full p-3\">\n        <SVG.VolumeButton volume={volume} onClick={() => setVolumeSlider(!volumeSlider)} />\n        <div\n          className={classNames(\n            'absolute flex items-center transform -translate-x-40% mt-3 p-2 bg-gray-200 rounded-md',\n            {\n              hidden: !volumeSlider,\n            }\n          )}\n        >\n          <input\n            type=\"range\"\n            name=\"volume\"\n            min=\"0\"\n            max=\"100\"\n            value={volume}\n            onChange={(event) => {\n              setVolume(event.target.valueAsNumber);\n              if (audioRef.current) {\n                audioRef.current.volume = event.target.valueAsNumber / 100;\n              }\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"cursor-pointer hover:bg-gray-500 hover:bg-opacity-50 rounded-full p-3\">\n        <SVG.HdQualityButton\n          hdQuality={hdQuality && !!radio?.url_hd_aac}\n          setHdQuality={setHdQuality}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default PlayerSongExtraControls;\n","import { RootStore } from '../../core/stores/rootStore';\nimport { injectAndObserve } from '../../core/utils';\nimport PlayerSongControls from './PlayerSongControls';\nimport PlayerSongDetails from './PlayerSongDetails';\nimport PlayerSongExtraControls from './PlayerSongExtraControls';\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  store?: RootStore;\n};\n\nconst Player: React.FC<Props> = injectAndObserve(({ store }) => {\n  const { darkMode, playerState } = store!;\n  const { radio, song, paused, volume, hdQuality, setPaused } = playerState;\n\n  const [currentRadio, setCurrentRadio] = useState(radio);\n\n  const audioRef = React.useRef<HTMLAudioElement | null>();\n\n  const grayColor = darkMode ? '111827' : 'd1d5db';\n\n  const setAudioRef = (ref: HTMLAudioElement): void => {\n    audioRef.current = ref;\n\n    if (audioRef.current) {\n      audioRef.current.volume = volume / 100;\n    }\n  };\n\n  const togglePlayer = async (_paused: boolean) => {\n    const audio = audioRef.current;\n\n    if (!audio) return;\n\n    try {\n      if (!_paused) {\n        audio.load();\n        await audio.play();\n      } else {\n        audio.pause();\n      }\n    } catch (e) {\n      // do nothing\n    }\n  };\n\n  useEffect(() => {\n    togglePlayer(paused);\n  }, [paused, hdQuality]);\n\n  useEffect(() => {\n    if (radio && radio.id !== currentRadio?.id) {\n      setPaused(false);\n      togglePlayer(false);\n    }\n    setCurrentRadio(radio);\n  }, [radio, currentRadio, setPaused]);\n\n  return (\n    <div className=\"fixed w-screen z-50\">\n      <div\n        className=\"grid grid-cols-4 lg:grid-cols-3 items-center h-56 lg:h-32 p-4 m-4 rounded-lg bg-gray-300 text-black dark:text-white dark:bg-gray-900 shadow-xl\"\n        style={{\n          backgroundImage: `linear-gradient(to right, #${grayColor}, #${grayColor}, #${grayColor}, #${grayColor}, #${radio?.color})`,\n        }}\n      >\n        <div className=\"col-span-3 lg:col-span-2 lg:grid lg:grid-cols-2\">\n          <PlayerSongDetails radio={radio} song={song} />\n          <PlayerSongControls setAudioRef={setAudioRef} />\n        </div>\n        <PlayerSongExtraControls audioRef={audioRef} />\n      </div>\n    </div>\n  );\n});\n\nexport default Player;\n","import './App.global.css';\nimport RadioList from './components/RadioList';\nimport Player from './components/player/Player';\nimport { RootStore } from './core/stores/rootStore';\nimport { injectAndObserve } from './core/utils';\nimport classNames from 'classnames';\nimport React from 'react';\n\ntype Props = { store?: RootStore };\n\nconst App: React.FC<Props> = injectAndObserve(({ store }) => {\n  const { darkMode } = store!;\n\n  return (\n    <div className={classNames({ dark: darkMode })}>\n      <div className=\"h-screen scrollbar scrollbar-none bg-gray-200 dark:bg-gray-800\">\n        <Player />\n        <RadioList />\n      </div>\n    </div>\n  );\n});\n\nexport default App;\n","import axios, { AxiosRequestConfig, Method } from 'axios';\n\nexport async function request<T>(\n  url: string,\n  method: Method = 'GET',\n  options?: AxiosRequestConfig\n): Promise<T> {\n  return (await axios.request<T>({ url, method, ...options })).data;\n}\n\nexport class HttpClient {\n  get = <T>(path: string, options?: AxiosRequestConfig): Promise<T> => {\n    return request<T>(path, 'GET', options);\n  };\n}\n\nconst http = new HttpClient();\n\nexport default http;\n","import { Radio, RadioSong } from '../types';\nimport { getCurrentSong } from '../utils';\nimport { RootStore } from './rootStore';\nimport { action, observable } from 'mobx';\n\nexport class PlayerState {\n  @observable radio: Radio | undefined;\n\n  @observable song: RadioSong | undefined;\n\n  @observable paused = false;\n\n  @observable hdQuality = true;\n\n  @observable volume = 50;\n\n  constructor(private rootStore: RootStore) {}\n\n  @action\n  setRadio = async (radio: Radio) => {\n    localStorage.setItem('lastRadioId', radio.id);\n\n    this.radio = radio;\n    await this.refreshSong();\n  };\n\n  @action\n  refreshSong = async () => {\n    this.song = getCurrentSong(this.radio);\n\n    if (!this.song) {\n      this.radio = await this.rootStore.refreshAndGetRadio(this.radio!);\n      const playlist = this.radio?.playlist;\n      this.song = getCurrentSong(this.radio) ?? playlist?.[playlist?.length - 1].song;\n    }\n  };\n\n  @action\n  setPaused = (paused: boolean) => {\n    this.paused = paused;\n  };\n\n  @action\n  setVolume = (volume: number) => {\n    this.volume = volume;\n  };\n\n  @action\n  setHdQuality = (hdQuality: boolean) => {\n    this.hdQuality = hdQuality && !!this.radio?.url_hd_aac;\n  };\n}\n","import http from '../http-client';\nimport { Radio } from '../types';\nimport { PlayerState } from './PlayerState';\nimport { action, observable } from 'mobx';\n\nexport class RootStore {\n  @observable darkMode: boolean;\n\n  @observable radios: Radio[] = [];\n\n  @observable playerState: PlayerState;\n\n  constructor() {\n    this.darkMode = this.getInitialDarkMode();\n\n    this.playerState = new PlayerState(this);\n\n    this.refresh()\n      .then(() => {\n        const lastRadioId = localStorage.getItem('lastRadioId');\n        const radio = this.radios.find((r) => r.id === lastRadioId) ?? this.radios[0];\n        return this.playerState.setRadio(radio);\n      })\n      .catch(undefined);\n\n    setInterval(async () => {\n      await this.refresh();\n      await this.playerState.refreshSong();\n    }, 30 * 1000);\n  }\n\n  @action\n  refresh = async () => {\n    this.radios = await http.get<Radio[]>('https://www.nrj.fr/onair');\n  };\n\n  @action\n  refreshAndGetRadio = async (radio: Radio): Promise<Radio | undefined> => {\n    await this.refresh();\n    return this.radios.find((r) => radio.id === r.id);\n  };\n\n  @action\n  setDarkMode = (darkMode: boolean): void => {\n    this.darkMode = darkMode;\n    localStorage.setItem('darkMode', `${darkMode}`);\n  };\n\n  private getInitialDarkMode = () => {\n    let status = localStorage.getItem('darkMode');\n\n    if (status === null && window.matchMedia) {\n      status = `${window.matchMedia('(prefers-color-scheme: dark)').matches}`;\n      localStorage.setItem('darkMode', status);\n    }\n\n    return status === 'true';\n  };\n}\n\nexport const rootStore = new RootStore();\n","import App from './App';\nimport { rootStore } from './core/stores/rootStore';\nimport { Provider } from 'mobx-react';\nimport React from 'react';\nimport { render } from 'react-dom';\n\nrender(\n  <Provider store={rootStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}